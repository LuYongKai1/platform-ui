const local: App.I18n.Schema = {
  system: {
    title: 'MirMAdmin',
    updateTitle: 'System Version Update Notification',
    updateContent: 'A new version of the system has been detected. Do you want to refresh the page immediately?',
    updateConfirm: 'Refresh immediately',
    updateCancel: 'Later'
  },
  common: {
    action: 'Action',
    add: 'Add',
    addSuccess: 'Add Success',
    backToHome: 'Back to Home',
    batchDelete: 'Batch Delete',
    cancel: 'Cancel',
    close: 'Close',
    check: 'Check',
    expandColumn: 'Expand Column',
    columnSetting: 'Column Setting',
    config: 'Config',
    confirm: 'Confirm',
    delete: 'Delete',
    deleteSuccess: 'Delete Success',
    confirmDelete: 'Confirm Delete',
    edit: 'Edit',
    warning: 'Warning',
    error: 'Error',
    index: 'Index',
    keywordSearch: 'Please enter a keyword to search',
    logout: 'Logout',
    logoutConfirm: 'Confirm Logout',
    lookForward: 'Looking forward to development',
    modify: 'Modify',
    modifySuccess: 'Modify Success',
    noData: 'No Data',
    operate: 'Operate',
    operateSuccess: 'Operate Success',
    queueSuccess: 'Queue Setup Success',
    pleaseCheckValue: 'Please check the value is valid',
    refresh: 'Refresh',
    reset: 'Reset',
    search: 'Search',
    switch: 'Switch',
    tip: 'Tip',
    trigger: 'Trigger',
    update: 'Update',
    updateSuccess: 'Update Success',
    userCenter: 'User Center',
    requestFailed: 'Request Failed',
    ControlPanel: 'Control Panel',
    ban: 'Ban',
    unban: 'Unban',
    banSuccess: 'Ban Success',
    unbanSuccess: 'Unban Success',
    banFailed: 'Ban Failed',
    unbanFailed: 'Unban Failed',
    chat: 'Chat',
    unchat: 'Unchat',
    muteSuccess: 'Mute Success',
    unmuteSuccess: 'Unmute Success',
    muteFailed: 'Mute Failed',
    unmuteFailed: 'Unmute Failed',
    confirmUnban: 'Confirm Unban',
    kick: 'Kick',
    confirmKickMany: 'Confirm Kick Many',
    kickAll: 'Kick All',
    kickSuccess: 'Kick Success',
    kickFailed: 'Kick Failed',
    kickPartialSuccess: 'Kick Partial Success',
    kickAllFailed: 'Kick All Failed',
    kickPartialFailed: 'Kick Partial Failed',
    kickAllSuccess: 'Kick All Success',
    confirmKickAll: 'Confirm Kick All',
    view: 'View',
    send: 'Send',
    confirmSend: 'Confirm Send Mail',
    sendSuccess: 'Send Success',
    sendFailed: 'Send Failed',
    stop: 'Stop Send',
    confirmStop: 'Confirm Stop Send Mail',
    stopSuccess: 'Stop Send Success',
    stopFailed: 'Stop Send Failed',
    all: 'All',
    banTimeInvalid: 'Ban Time Invalid',
    maintenance: 'Maintenance',
    queue: 'Queue',
    banAndMuteUser: 'Ban And Mute User',
    sync: 'Sync',
    syncSuccess: 'Sync Success',
    syncFailed: 'Sync Failed',
    exporting: 'Synchronizing data...',
    maintenanceSuccess: 'Maintenance Success',
    maintenanceFailed: 'Maintenance Failed',
    confirmMaintenance: 'Confirm Maintenance',
    cancelMail: 'Cancel Mail',
    confirmCancel: 'Confirm Cancel Mail',
    cancelSuccess: 'Cancel Success',
    cancelFailed: 'Cancel Failed',
    selectMailFirst: 'Select Mail First',
    confirmDeleteMail: 'Confirm Delete Mail',
    audit: 'Audit',
    auditSuccess: 'Audit Success',
    auditFailed: 'Audit Failed',
    auditPass: 'Audit Pass',
    auditReject: 'Audit Reject',
    enable: 'Enable',
    disable: 'Disable',
    enableSuccess: 'Enable Success',
    disableSuccess: 'Disable Success',
    enableFailed: 'Enable Failed',
    disableFailed: 'Disable Failed',
    preview: 'Preview',
    realTime: 'Real Time(1 hour)',
    history: 'History(24 hours)',
    securityTips: 'Security Tips',
    updateFailed: 'Update Failed',
    uploadSuccess: 'Upload Success',
    uploadFailed: 'Upload Failed',
    invalidImageUrl: 'Invalid Image URL',
    import: 'Import',
    export: 'Export',
    exportSuccess: 'Export Success',
    exportFailed: 'Export Failed',
    confirmExport: 'Confirm Export All?',
    exportingData: 'Exporting Data...',
    total: 'Total',
    day: 'Day',
    week: 'Week',
    month: 'Month',
    download: 'Download',
    downloadingFile: 'Downloading File...',
    fileDataEmpty: 'File Data Empty',
    fileDownloadSuccess: 'File Download Success',
    hash: 'Hash',
    upload: 'Upload File',
    fileSizeExceeded: 'File Size Exceeded',
    selectedFile: 'Selected File:',
    pleaseSelectFile: 'Please Select File First',
    pleaseSelectServer: 'Please Select Server First',
    pleaseSelectFileToUpload: 'Please Select File to Upload, File Size Cannot Exceed 100MB',
    fileSize: 'File Size:',
    selectFile: 'Select File',
    selectFiles: 'Select Files',
    selectedFiles: 'Selected Files',
    pleaseSelectFilesToUpload: 'Please select files to upload to server, file size cannot exceed 100MB',
    clearAll: 'Clear All',
    remove: 'Remove',
    targetServer: 'Target Server',
    uploadPath: 'Upload Path',
    copy: 'Copy',
    hashInfo: 'Hash Info',
    fileName: 'File Name',
    hashAlgo: 'Hash Algorithm',
    hashValue: 'Hash Value',
    hashDataEmpty: 'Hash Data Empty',
    hashCopiedToClipboard: 'Hash Copied to Clipboard',
    copyFailed: 'Copy Failed',
    copySuccess: 'Copy Success',
    batchRecharge: 'Batch Recharge',
    batchCancel: 'Batch Cancel',
    confirmBatchCancel: 'Confirm Batch Cancel?',
    yesOrNo: {
      yes: 'Yes',
      no: 'No'
    },
    startServer: 'Start Server',
    confirmStartServer: 'Confirm Start Server',
    startServerAllSuccess: 'Start Server All Success',
    startServerAllFailed: 'Start Server All Failed',
  },
  request: {
    logout: 'Logout user after request failed',
    logoutMsg: 'User status is invalid, please log in again',
    logoutWithModal: 'Pop up modal and then log out user after request failed',
    logoutWithModalMsg: 'User status is invalid, please log in again',
    refreshToken: 'The requested token has expired, refresh the token',
    tokenExpired: 'Token has expired',
    accountKickedOut: 'Account logged in from another device',
    accountKickedOutMsg: 'Your account has been logged in from another device, if not by yourself, please change the password',
    loginExpiredTitle: 'Login Expired',
    loginExpiredMsg: 'Your login session has expired, please log in again to continue using the system.'
  },
  theme: {
    themeSchema: {
      title: 'Theme Schema',
      light: 'Light',
      dark: 'Dark',
      auto: 'Follow System'
    },
    grayscale: 'Grayscale',
    colourWeakness: 'Colour Weakness',
    layoutMode: {
      title: 'Layout Mode',
      vertical: 'Vertical Menu Mode',
      horizontal: 'Horizontal Menu Mode',
      'vertical-mix': 'Vertical Mix Menu Mode',
      'horizontal-mix': 'Horizontal Mix menu Mode',
      reverseHorizontalMix: 'Reverse first level menus and child level menus position'
    },
    recommendColor: 'Apply Recommended Color Algorithm',
    recommendColorDesc: 'The recommended color algorithm refers to',
    themeColor: {
      title: 'Theme Color',
      primary: 'Primary',
      info: 'Info',
      success: 'Success',
      warning: 'Warning',
      error: 'Error',
      followPrimary: 'Follow Primary'
    },
    scrollMode: {
      title: 'Scroll Mode',
      wrapper: 'Wrapper',
      content: 'Content'
    },
    page: {
      animate: 'Page Animate',
      mode: {
        title: 'Page Animate Mode',
        fade: 'Fade',
        'fade-slide': 'Slide',
        'fade-bottom': 'Fade Zoom',
        'fade-scale': 'Fade Scale',
        'zoom-fade': 'Zoom Fade',
        'zoom-out': 'Zoom Out',
        none: 'None'
      }
    },
    fixedHeaderAndTab: 'Fixed Header And Tab',
    header: {
      height: 'Header Height',
      breadcrumb: {
        visible: 'Breadcrumb Visible',
        showIcon: 'Breadcrumb Icon Visible'
      },
      multilingual: {
        visible: 'Display multilingual button'
      }
    },
    tab: {
      visible: 'Tab Visible',
      cache: 'Tag Bar Info Cache',
      height: 'Tab Height',
      mode: {
        title: 'Tab Mode',
        chrome: 'Chrome',
        button: 'Button'
      }
    },
    sider: {
      inverted: 'Dark Sider',
      width: 'Sider Width',
      collapsedWidth: 'Sider Collapsed Width',
      mixWidth: 'Mix Sider Width',
      mixCollapsedWidth: 'Mix Sider Collapse Width',
      mixChildMenuWidth: 'Mix Child Menu Width'
    },
    footer: {
      visible: 'Footer Visible',
      fixed: 'Fixed Footer',
      height: 'Footer Height',
      right: 'Right Footer'
    },
    watermark: {
      visible: 'Watermark Full Screen Visible',
      text: 'Watermark Text'
    },
    themeDrawerTitle: 'Theme Configuration',
    pageFunTitle: 'Page Function',
    resetCacheStrategy: {
      title: 'Reset Cache Strategy',
      close: 'Close Page',
      refresh: 'Refresh Page'
    },
    configOperation: {
      copyConfig: 'Copy Config',
      copySuccessMsg: 'Copy Success, Please replace the variable "themeSettings" in "src/theme/settings.ts"',
      resetConfig: 'Reset Config',
      resetSuccessMsg: 'Reset Success'
    }
  },
  route: {
    login: 'Login',
    403: 'No Permission',
    404: 'Page Not Found',
    500: 'Server Error',
    'iframe-page': 'Iframe',
    home: 'Home',
    document: 'Document',
    document_project: 'Project Document',
    'document_project-link': 'Project Document(External Link)',
    document_vue: 'Vue Document',
    document_vite: 'Vite Document',
    document_unocss: 'UnoCSS Document',
    document_naive: 'Naive UI Document',
    document_antd: 'Ant Design Vue Document',
    document_alova: 'Alova Document',
    'user-center': 'User Center',
    about: 'About',
    function: 'System Function',
    alova: 'Alova Example',
    alova_request: 'Alova Request',
    alova_user: 'User List',
    alova_scenes: 'Scenario Request',
    function_tab: 'Tab',
    'function_multi-tab': 'Multi Tab',
    'function_hide-child': 'Hide Child',
    'function_hide-child_one': 'Hide Child',
    'function_hide-child_two': 'Two',
    'function_hide-child_three': 'Three',
    function_request: 'Request',
    'function_toggle-auth': 'Toggle Auth',
    'function_super-page': 'Super Admin Visible',
    system: 'System Manage',
    manage_user: 'User Manage',
    'manage_user-detail': 'User Detail',
    manage_role: 'Role Manage',
    manage_menu: 'Menu Manage',
    'multi-menu': 'Multi Menu',
    'multi-menu_first': 'Menu One',
    'multi-menu_first_child': 'Menu One Child',
    'multi-menu_second': 'Menu Two',
    'multi-menu_second_child': 'Menu Two Child',
    'multi-menu_second_child_home': 'Menu Two Child Home',
    exception: 'Exception',
    exception_403: '403',
    exception_404: '404',
    exception_500: '500',
    plugin: 'Plugin',
    plugin_copy: 'Copy',
    plugin_charts: 'Charts',
    plugin_charts_echarts: 'ECharts',
    plugin_charts_antv: 'AntV',
    plugin_charts_vchart: 'VChart',
    plugin_editor: 'Editor',
    plugin_editor_quill: 'Quill',
    plugin_editor_markdown: 'Markdown',
    plugin_icon: 'Icon',
    plugin_map: 'Map',
    plugin_print: 'Print',
    plugin_swiper: 'Swiper',
    plugin_video: 'Video',
    plugin_barcode: 'Barcode',
    plugin_pinyin: 'pinyin',
    plugin_excel: 'Excel',
    plugin_pdf: 'PDF preview',
    plugin_gantt: 'Gantt Chart',
    plugin_gantt_dhtmlx: 'dhtmlxGantt',
    plugin_gantt_vtable: 'VTableGantt',
    plugin_typeit: 'Typeit',
    plugin_tables: 'Tables',
    plugin_tables_vtable: 'VTable',
    system_menu: 'Menu Management',
    system_user: 'User Management',
    system_role: 'Role Management',
    system_dept: 'Department Management',
    system_post: 'Post Management',
    system_config: 'Config Management',
    system_dict: 'Dict Management',
    system_notice: 'Notice Management',
    system_log: 'Log Management',
    log_logininfor: 'Login Log',
    log_operlog: 'Operation Log',
    game: 'Game',
    game_game: 'Game Management',
    monitor: 'Monitor',
    game_list: 'Game List',
    monitor_job: 'Job Management',
    monitor_online: 'Online User',
    tool: 'Tool',
    tool_gen: 'Code Generator',
    tool_build: 'Build',
    channel: 'Channel',
    channel_channellist: 'Channel List',
    channel_define: 'Channel Define',
    server: 'Server',
    server_region: 'Region Management',
    server_servergroup: 'Server Group Management',
    server_serveritem: 'Server Item Management',
    server_servercross: 'Server Cross Management',
    server_serverfile: 'Server File Management',
    server_white: 'White List Management',
    server_log: 'Log Management',
    user: 'Player Management',
    user_player: 'Character Management',
    user_users: 'Account Management',
    user_rolelist: 'Role Information',
    user_white: 'White List Management',
    user_activate: 'Activate',
    monitor_dev: 'Device Monitor',
    operate: 'Operate',
    operate_single: 'Single',
    operate_multiple: 'Multiple',
    operate_server: 'Server Mail',
    announcement: 'Announcement',
    announcement_notice: 'Notice',
    announcement_maintenance: 'Maintenance',
    announcement_notifications: 'Scroll Notice',
    announcement_activityimages: 'Activity Image',
    analysis: 'Data Analysis',
    analysis_overview: 'Data Overview',
    overview_overviewuser: 'User Overview',
    overview_overviewrole: 'Role Overview',
    overview_overviewaadd: 'Advertising Overview',
    analysis_retention: 'Retention Data',
    retention_payretention: 'Pay Retention',
    retention_retentionuser: 'User Retention',
    retention_retentionrole: 'Role Retention',
    ltv: 'LTV Data',
    ltv_ltvuser: 'User LTV',
    ltv_ltvpay: 'Pay LTV',
    viewoperation: 'Operation Activity',
    viewoperation_viewtemplate: 'View Operation Template',
    viewoperation_createtemplate: 'Template Management',
    viewoperation_serveractivity: 'Server Activity',
    viewoperation_startactivity: 'Activity Management',
    viewoperation_viewannouncement: 'Publish Operation Announcement',
    viewoperation_viewlogs: 'Activity Log',
    viewoperation_activitygm: 'Template Configuration',
    viewoperation_gmtemplateparams: 'Parameter Configuration',
    guild: 'Guild Management',
    guild_guildmail: 'Guild Mail',
    guild_list: 'Guild List',
    business: 'Business Management',
    business_orders: 'Order Management',
    business_products: 'Product Management',
    business_gemsshop: 'User Management',
    questionnaire: 'Questionnaire Management',
    questionnaire_config: 'Questionnaire Configuration',
    questionnaire_surveyrecord: 'Questionnaire Record List',
    giftmanage: 'Gift Management',
    giftmanage_giftactivityconfig: 'Gift Activity Configuration',
    giftmanage_giftcode: 'View Gift Code',
    giftmanage_redeemrecord: 'Redeem Record',
  },
  page: {
    login: {
      common: {
        loginOrRegister: 'Login / Register',
        userNamePlaceholder: 'Please enter user name',
        phonePlaceholder: 'Please enter phone number',
        codePlaceholder: 'Please enter verification code',
        passwordPlaceholder: 'Please enter password',
        confirmPasswordPlaceholder: 'Please enter password again',
        codeLogin: 'Verification code login',
        confirm: 'Confirm',
        back: 'Back',
        validateSuccess: 'Verification passed',
        loginSuccess: 'Login successfully',
        welcomeBack: 'Welcome back, {userName} !'
      },
      pwdLogin: {
        title: 'Password Login',
        rememberMe: 'Remember me',
        forgetPassword: 'Forget password?',
        register: 'Register',
        otherAccountLogin: 'Other Account Login',
        otherLoginMode: 'Other Login Mode',
        superAdmin: 'Super Admin',
        admin: 'Admin',
        user: 'User'
      },
      codeLogin: {
        title: 'Verification Code Login',
        getCode: 'Get verification code',
        reGetCode: 'Reacquire after {time}s',
        sendCodeSuccess: 'Verification code sent successfully',
        imageCodePlaceholder: 'Please enter image verification code'
      },
      register: {
        title: 'Register',
        agreement: 'I have read and agree to',
        protocol: '《User Agreement》',
        policy: '《Privacy Policy》'
      },
      resetPwd: {
        title: 'Reset Password'
      },
      bindWeChat: {
        title: 'Bind WeChat'
      }
    },
    about: {
      title: 'About',
      introduction: `SoybeanAdmin is an elegant and powerful admin template, based on the latest front-end technology stack, including Vue3, Vite5, TypeScript, Pinia and UnoCSS. It has built-in rich theme configuration and components, strict code specifications, and an automated file routing system. In addition, it also uses the online mock data solution based on ApiFox. SoybeanAdmin provides you with a one-stop admin solution, no additional configuration, and out of the box. It is also a best practice for learning cutting-edge technologies quickly.`,
      projectInfo: {
        title: 'Project Info',
        version: 'Version',
        latestBuildTime: 'Latest Build Time',
        githubLink: 'Github Link',
        previewLink: 'Preview Link'
      },
      prdDep: 'Production Dependency',
      devDep: 'Development Dependency'
    },
    home: {
      branchDesc:
        'For the convenience of everyone in developing and updating the merge, we have streamlined the code of the main branch, only retaining the homepage menu, and the rest of the content has been moved to the example branch for maintenance. The preview address displays the content of the example branch.',
      greeting: 'Good morning, {userName}, today is another day full of vitality!',
      weatherDesc: 'Today is cloudy to clear, 20℃ - 25℃!',
      projectCount: 'Project Count',
      todo: 'Todo',
      message: 'Message',
      downloadCounts: 'Download Count',
      registerCount: 'Register Count',
      schedule: 'Work and rest Schedule',
      study: '1-10',
      work: '11-20',
      rest: '21-30',
      entertainment: '31-40',
      visitCount: 'Visit Count',
      turnover: 'Turnover',
      downloadCount: 'Download Count',
      dealCount: 'Deal Count',
      serverOnline: 'Server Online',
      channelOnline: 'Channel Online',
      levelOnline: 'Online Player Level Distribution',
      level: 'Level Distribution',
      projectNews: {
        title: 'Project News',
        moreNews: 'More News',
        desc1: 'Soybean created the open source project soybean-admin on May 28, 2021!',
        desc2: 'Yanbowe submitted a bug to soybean-admin, the multi-tab bar will not adapt.',
        desc3: 'Soybean is ready to do sufficient preparation for the release of soybean-admin!',
        desc4: 'Soybean is busy writing project documentation for soybean-admin!',
        desc5: 'Soybean just wrote some of the workbench pages casually, and it was enough to see!'
      },
      creativity: 'Creativity'
    },
    function: {
      tab: {
        tabOperate: {
          title: 'Tab Operation',
          addTab: 'Add Tab',
          addTabDesc: 'To about page',
          closeTab: 'Close Tab',
          closeCurrentTab: 'Close Current Tab',
          closeAboutTab: 'Close "About" Tab',
          addMultiTab: 'Add Multi Tab',
          addMultiTabDesc1: 'To MultiTab page',
          addMultiTabDesc2: 'To MultiTab page(with query params)'
        },
        tabTitle: {
          title: 'Tab Title',
          changeTitle: 'Change Title',
          change: 'Change',
          resetTitle: 'Reset Title',
          reset: 'Reset'
        }
      },
      multiTab: {
        routeParam: 'Route Param',
        backTab: 'Back function_tab'
      },
      toggleAuth: {
        toggleAccount: 'Toggle Account',
        authHook: 'Auth Hook Function `hasAuth`',
        superAdminVisible: 'Super Admin Visible',
        adminVisible: 'Admin Visible',
        adminOrUserVisible: 'Admin and User Visible'
      },
      request: {
        repeatedErrorOccurOnce: 'Repeated Request Error Occurs Once',
        repeatedError: 'Repeated Request Error',
        repeatedErrorMsg1: 'Custom Request Error 1',
        repeatedErrorMsg2: 'Custom Request Error 2'
      }
    },
    alova: {
      scenes: {
        captchaSend: 'Captcha Send',
        autoRequest: 'Auto Request',
        visibilityRequestTips: 'Automatically request when switching browser window',
        pollingRequestTips: 'It will request every 3 seconds',
        networkRequestTips: 'Automatically request after network reconnecting',
        refreshTime: 'Refresh Time',
        startRequest: 'Start Request',
        stopRequest: 'Stop Request',
        requestCrossComponent: 'Request Cross Component',
        triggerAllRequest: 'Manually Trigger All Automated Requests'
      }
    },
    manage: {
      common: {
        status: {
          enable: 'Enable',
          disable: 'Disable'
        }
      },
      role: {
        title: 'Role List',
        roleName: 'Role Name',
        roleKey: 'Role Key',
        order: 'Order',
        createTime: 'Create Time',
        updateTime: 'Update Time',
        roleStatus: 'Role Status',
        roleDesc: 'Role Description',
        menuAuth: 'Menu Auth',
        buttonAuth: 'Button Auth',
        form: {
          roleName: 'Please enter role name',
          roleKey: 'Please enter role key',
          order: 'Please enter role order',
          roleStatus: 'Please select role status',
          roleDesc: 'Please enter role description'
        },
        addRole: 'Add Role',
        editRole: 'Edit Role'
      },
      user: {
        title: 'User List',
        userName: 'User Name',
        userGender: 'Gender',
        nickName: 'Nick Name',
        avatar: 'Avatar',
        userPhone: 'Phone Number',
        userEmail: 'Email',
        userStatus: 'User Status',
        userRole: 'User Role',
        loginIp: 'Login IP',
        updateTime: 'Update Time',
        loginDate: 'Login Date',
        passWord: 'Password',
        createtime: 'Create Time',
        form: {
          userName: 'Please enter user name',
          nickName: 'Please enter nick name',
          userPhone: 'Please enter phone number',
          userEmail: 'Please enter email',
          userRole: 'Please select role',
          userGender: 'Please select gender',
          passWord: 'Please enter password',
          passwordHint: 'Leave blank to keep current password'
        },
        addUser: 'Add User',
        editUser: 'Edit User',
        gender: {
          male: 'Male',
          female: 'Female'
        }
      },
      menu: {
        home: 'Home',
        title: 'Menu List',
        id: 'ID',
        parentId: 'Parent ID',
        menuType: 'Menu Type',
        menuName: 'Menu Name',
        routeName: 'Route Name',
        routePath: 'Route Path',
        pathParam: 'Path Param',
        layout: 'Layout Component',
        page: 'Page Component',
        i18nKey: 'I18n Key',
        icon: 'Icon',
        localIcon: 'Local Icon',
        iconTypeTitle: 'Icon Type',
        order: 'Order',
        constant: 'Constant',
        keepAlive: 'Keep Alive',
        href: 'Href',
        hideInMenu: 'Hide In Menu',
        activeMenu: 'Active Menu',
        multiTab: 'Multi Tab',
        fixedIndexInTab: 'Fixed Index In Tab',
        query: 'Query Params',
        button: 'Button',
        buttonCode: 'Button Code',
        buttonDesc: 'Button Desc',
        menuStatus: 'Menu Status',
        perms: 'Perms',
        yesOrNo: {
          yes: 'Yes',
          no: 'No'
        },
        form: {
          home: 'Please select home',
          menuType: 'Please select menu type',
          menuName: 'Please enter menu name',
          routeName: 'Please enter route name',
          routePath: 'Please enter route path',
          pathParam: 'Please enter path param',
          page: 'Please select page component',
          layout: 'Please select layout component',
          i18nKey: 'Please enter i18n key',
          icon: 'Please enter iconify name',
          localIcon: 'Please enter local icon name',
          order: 'Please enter order',
          keepAlive: 'Please select whether to cache route',
          href: 'Please enter href',
          hideInMenu: 'Please select whether to hide menu',
          activeMenu: 'Please select route name of the highlighted menu',
          multiTab: 'Please select whether to support multiple tabs',
          fixedInTab: 'Please select whether to fix in the tab',
          fixedIndexInTab: 'Please enter the index fixed in the tab',
          queryKey: 'Please enter route parameter Key',
          queryValue: 'Please enter route parameter Value',
          button: 'Please select whether it is a button',
          buttonCode: 'Please enter button code',
          buttonDesc: 'Please enter button description',
          menuStatus: 'Please select menu status',
          perms: 'Please enter permission identifier',
        },
        addMenu: 'Add Menu',
        editMenu: 'Edit Menu',
        addChildMenu: 'Add Child Menu',
        type: {
          directory: 'Directory',
          menu: 'Menu',
          button: 'Button'
        },
        iconType: {
          iconify: 'Iconify Icon',
          local: 'Local Icon'
        }
      },
      logininfor: {
        title: 'Login Log',
        infoId: 'Log ID',
        userName: 'Login Name',
        ipaddr: 'Login IP',
        loginLocation: 'Login Location',
        status: 'Login Status',
        msg: 'Login Message',
        accessTime: 'Access Time',
        statusTypes: {
          success: 'Success',
          error: 'Error'
        }
      },
      operlog: {
        title: 'Oper Log',
        operId: 'Log ID',
        method: 'Method',
        requestMethod: 'Request Method',
        operatorType: 'Operator Type',
        operName: 'Oper Name',
        deptName: 'Dept Name',
        operUrl: 'Oper URL',
        operIp: 'Oper IP',
        jsonResult: 'Json Result',
        status: 'Status',
        operParam: 'Oper Param',
        operTime: 'Oper Time',
        operatorTypes: {
          other: 'Other',
          add: 'Add',
          edit: 'Edit',
          delete: 'Delete'
        },
        statusTypes: {
          normal: 'Normal',
          error: 'Error'
        }
      },
      gmlog: {
        title: 'GM Log',
        gmCode: 'GM Code',
        gmName: 'GM Name',
        operate: 'Operate',
        timeRange: 'Time Range',
        startTime: 'Start Time',
        endTime: 'End Time',
        serverId: 'Server ID',
        paramJson: 'Param JSON',
        gmUrl: 'GM URL',
        roleId: 'Role ID',
        userId: 'User ID',
        msg: 'Message',
        createDate: 'Create Date',
        status: 'Status',
        form: {
          gmCode: 'Please select GM code',
          operate: 'Please enter operator',
        }
      },
      game: {
        title: 'Game List',
        gameId: ' Game ID',
        gameName: 'Game Name',
        userMerge: 'User Merge',
        gameKey: 'Game Key',
        gameAlias: 'Game Alias',
        biAlias: 'BI Alias',
        createDate: 'Create Date',
        callbackUrl: 'Callback URL',
        gmUrl: 'GM URL',
        channel: 'Channel',
        updateDate: 'Update Date',
        enable: 'Game Status',
        form: {
          gameId: 'Please enter game ID',
          gameName: 'Please enter game name',
          gameAlias: 'Please enter game alias',
          callbackUrl: 'Please enter callback URL',
          gmUrl: '  Please enter GM URL',
          enable: 'Please select game status'
        },
        type: {
          disable: 'IP Restricted',
          normal: ' Normal',
        },
        usermerge: {
          dataisolation: "Data Isolation",
          dataaccess: "Data Access"
        },
        addGame: 'Add Game',
        editGame: 'Edit Game',
      },
      channel: {
        title: 'Channel List',
        channelId: 'Channel ID',
        channelName: 'Channel Code',
        channelBriefName: 'Channel Brief Name',
        channelUserTotal: 'Channel User Total',
        platform: 'Game Platform',
        createDate: 'Create Time',
        updateDate: 'Update Time',
        enable: 'Enable',
        addchannel: 'Add Channel',
        editChannel: 'Edit Channel',
        status: {
          enable: 'Enable',
          disable: 'Disable',
        },
        form: {
          channelId: 'Please enter channel ID',
          channelName: 'Please enter channel code',
          channelBriefName: 'Please enter channel brief name',
          channelUserTotal: 'Please select whether to callback',
        },
      },
      serverregion: {
        id: 'ID',
        title: 'Server Region List',
        regionName: 'Region Name',
        regionIndex: 'Region Index',
        commonHost: 'Common Host',
        channelMedia: 'Channel Media',
        groupList: 'Group List',
        whiteList: 'White List',
        updateDate: 'Update Date',
        maintenance: 'Maintenance',
        clientVersionMax: 'Client Version Max',
        clientVersionMin: 'Client Version Min',
        commonPort: 'Common Port',
        resUrl: 'Res Url',
        maintenanceMsg: 'Maintenance Msg',
        addserver: 'Add Server',
        editserver: 'Edit Server',
        form: {
          regionName: 'Please enter region name',
          regionIndex: 'Please enter region index',
          clientVersionMax: 'Please enter client version max',
          clientVersionMin: 'Please enter client version min',
          resUrl: 'Please enter res url',
          commonHost: 'Please enter common host',
          commonPort: 'Please enter common port',
          channelMedia: 'Please enter channel media',
          maintenanceMsg: 'Please enter maintenance message',
        },
        status: {
          normal: 'Normal',
          disable: 'Maintenance',
        }
      },
      servergroup: {
        title: 'Server Group List',
        addservergroup: 'Add Server Group',
        editservergroup: 'Edit Server Group',
        gameId: 'Game ID',
        groupIndex: 'Group Index',
        groupName: 'Group Name',
        groupTag: 'Group Tag',
        groupTest: 'Group Type',
        createDate: 'Create Date',
        updateDate: 'Update Date',
        form: {
          groupName: 'Please enter group name',
          groupTag: 'Please enter group tag',
          groupIndex: 'Please enter group index',
        },
        status: {
          Normalgrouping: 'Normal Grouping',
          Testgrouping: 'Test Grouping',
        }
      },
      serverwhite: {
        title: 'Server White List',
        id: 'ID',
        type: 'White List Type',
        param: 'Content',
        channel: 'Channel',
        operateUser: 'Operate User',
        operateTime: 'Operate Time',
        addwhite: 'Add White List',
        editwhite: 'Edit White List',
        Account: 'Account',
        status: 'Status',
        description: 'Description',
        form: {
          type: 'Please select white list type',
          param: 'Please enter content',
          channel: 'Please select channel',
          Account: 'Please search role information',
        },
        whitetypeIp: {
          userWhite: '[Maintenance Mode] Account White List',
          ipWhitelist: '[Maintenance Mode] IP White List',
          ipWhiteListRestricted: '[Restricted Mode] IP White List',
          accountWhiteListRestricted: '[Restricted Mode] Account White List',
          ipBlacklist: 'IP Black List',
        },
      },
      serveritem: {
        id: 'ID',
        title: 'Server List',
        serverId: 'Server ID',
        serverName: 'Server Name',
        serverIp: 'Public IP',
        serverPort: 'Port',
        intranetIp: 'Intranet IP',
        serverOpenDate: 'Open Date',
        urlCallback: 'Server Delivery Address',
        urlGm: 'GM URL',
        serverVisible: 'Server Visible',
        serverStatus: 'Server Status',
        serverNew: 'New Server',
        serverRecommend: 'Recommend',
        extendParam: 'Extend Param',
        serverRecommendNew: 'Recommend/New Server',
        noCreateRole: 'No Create Role',
        hidden: 'Hidden',
        serverTypecategory: 'Server Type',
        addserveritem: 'Add Server',
        editserveritem: 'Edit Server',
        selectgroup: 'select group',
        serverTags: 'Server Tags',
        new: 'New',
        recommend: 'Recommend',
        hot: 'Hot',
        busyUser: 'Busy',
        fullUser: 'Full',
        maxUser: 'Max Users',
        onlineUser: 'Online Users',
        runState: 'Server Status',
        syncSuccess: 'GM URL sync success',
        syncFailed: 'GM URL sync failed',
        syncFailedTip: 'Please enter GM URL first',
        syncFailedTip2: 'Please click the sync button and ensure the GM URL sync is successful',
        serverVisibles: {
          invisible: 'Invisible',
          whitelist: 'White List',
          visible: 'Visible',
        },
        serverStatusitem: {
          normal: 'Normal',
          crowd: 'Crowd',
          full: 'Full',
          maintain: 'Maintain',
          close: 'Close',
          prepare: 'Prepare',
          invisible: 'Invisible',
        },
        serverRecommenditem: {
          recommend: 'Recommend',
          unrecommend: 'Unrecommend',
        },
        serverNewitem: {
          oldserver: 'Non-new server',
          newserver: 'New server',
        },
        serverRunStateitem: {
          normal: 'Normal',
          warning: 'Crowd',
          offline: 'Full',
          maintenance: 'Maintenance',
        },
        serverTypeCategory: {
          normal: 'Normal Server',
          cross: 'Cross Server',
          merge: 'Merged Server',
        },
        form: {
          serverId: 'Please enter server ID',
          serverName: 'Please enter server name',
          serverIp: 'Please enter public IP',
          serverPort: 'Please enter port',
          intranetIp: 'Please enter intranet IP',
          serverOpenDate: 'Please select open date',
          urlCallback: 'Please enter server delivery address',
          urlGm: 'Please enter GM URL',
          serverVisible: 'Please select server visible',
          serverStatus: 'Please select server status',
          serverNew: 'Please select new server',
          serverRecommend: 'Please select recommend',
          extendParam: 'Please enter extend param',
          selectgroup: 'Please select group',
          serverTypecategory: 'Please select server type',
          busyUser: 'Please enter busy user',
          fullUser: 'Please enter full user',
          maxUser: 'Please enter max user',
        }
      },
      servercross: {
        title: 'Cross Server List',
        addservercross: 'Add Cross Server',
        editservercross: 'Edit Cross Server',
        assign: 'Assign',
        assignSuccess: 'Assign Success',
        assignFailed: 'Assign Failed',
        loadAssignedServers: 'Load Assigned Servers',
        cross: 'Cross',
        normal: 'Normal',
        assignTarget: 'Assign Target',
        crossServer: 'Cross Server',
        assignServers: 'Assign Servers',
        form: {
          crossServer: 'Please select cross server',
          normalServer: 'Please select normal server',
        }
      },
      serverqueue: {
        title: 'Queue Setting',
        setto: 'Set to',
        serverList: 'Select Server',
        form: {
          setto: 'Please enter set to',
        }
      },
      log: {
        title: 'Log List',
        gameId: 'Game ID',
        logName: 'Log Name',
        logIp: 'Log IP',
        logPort: 'Log Port',
        saveEnable: 'Save Enable',
        groupList: 'Group List',
        enable: 'Enable',
        updateDate: 'Update Date',
        addserverlog: 'Add Log',
        editserverlog: 'Edit Log',
        form: {
          logName: 'Please enter log name',
          logIp: '  Please enter log ip',
          logPort: 'Please enter log port',
          saveEnable: 'Please select save enable',
        },
        status: {
          Shutdown: 'Shutdown',
          normal: 'Normal',
        },
        serverenablelog: {
          Nosave: 'No Save',
          instantlysave: 'Instantly Save',
        }
      },
      gmuser: {
        title: 'User List',
        openId: 'Platform ID',
        userId: 'User ID',
        mediaId: 'Media',
        channelId: 'Channel',
        ip: 'IP',
        deviceId: 'Device ID',
        regDate: 'Register Time',
        banTime: 'Ban Time',
        banReason: 'Ban Reason',
        chatChannels: 'Channel',
        form: {
          userId: 'Please enter user ID',
          mediaId: 'Please select media',
          channelId: 'Please select channel',
          deviceId: 'Please enter device ID',
          regDate: 'Please select register time',
          banTime: 'Please select ban time',
          banReason: 'Please enter ban reason',
        }
      },
      gmrole: {
        title: 'Role List',
        userId: 'User ID',
        openId: 'Platform ID',
        roleId: 'Role ID',
        roleName: 'Role Name',
        roleType: 'Role Type',
        roleLevel: 'Role Level',
        vipLevel: 'VIP Level',
        partyId: 'Party ID',
        partyName: 'Party Name',
        balance: 'Balance',
        ip: 'IP',
        serverId: 'Server',
        userStatus: 'User Status',
        banDate: 'Ban Date',
        banReason: 'Ban Reason',
        chatDate: 'Chat Date',
        chatReason: 'Chat Reason',
        serverName: 'Server Name',
        form: {
          roleId: 'Please enter role ID',
          roleName: 'Please enter role name',
          serverId: 'Please select server',
          userId: 'Please search role information',
          openId: 'Please enter platform ID',
        }
      },
      norice: {
        title: 'Notice List',
        selectregion: 'Please select region',
        noticeIndex: 'Sort Order',
        noticeName: 'Notice Title',
        noticeType: 'Notice Type',
        noticeExplain: 'Notice Identifier',
        enable: 'Status',
        createDate: 'Start Date',
        updateDate: 'End Date',
        noticeContent: 'Notice Content',
        noriceadd: 'Add Notice',
        noriceedit: 'Edit Notice',
        content: 'Content',
        NoticeType: {
          announcement: 'Announcement',
          activity: 'Activity',
          festival: 'Festival',
          userId: 'User ID',
        },
        NoticeLabel: {
          not: 'None',
          hot: 'Hot',
          new: 'Hot',
        },
        NoticeStatus: {
          normal: 'Enabled',
          disable: 'Disabled',
        },
        form: {
          noticeIndex: 'Please enter sort order',
          createDate: 'Please select start date',
          updateDate: 'Please select end date',
          noticeName: 'Please enter the notice title',
          noticeType: 'Please select a notice type',
          noticeContent: 'Please enter the notice content',
          status: 'Please select status',
          noticeIndexRequired: 'Please enter sort order',
          contentRequired: 'Please enter the notice content',
        }
      },
      maintenance: {
        id: 'ID',
        title: 'Maintenance Notice',
        content: 'Maintenance Notice Content',
        banner: 'Maintenance Notice Banner',
        linitTime: 'End Effective Time',
        publishTime: 'Start Effective Time',
        addMaintenance: 'Add Maintenance Notice',
        editMaintenance: 'Edit Maintenance Notice',
        form: {
          title: 'Please enter the maintenance notice title',
          content: 'Please enter the maintenance notice content',
          banner: 'Please enter the maintenance notice banner',
          linitTime: 'Please select the effective time',
          publishTime: 'Please select the publish time',
        }
      },
      notifications: {
        title: 'Notifications',
        marqueeStatus: 'Status',
        marqueeName: 'Name',
        marqueeContent: 'Content',
        serverIds: 'Select Server',
        roundTimes: 'Round Times',
        roundDelay: 'Interval (seconds)',
        startTime: 'Start Time',
        addMarquee: 'Add Notifications',
        editMarquee: 'Edit Notifications',
        form: {
          marqueeName: 'Please enter name',
          marqueeContent: 'Please enter content',
          serverIds: 'Please select server',
          roundTimes: 'Please enter round times',
          roundDelay: 'Please enter interval (seconds)',
          startTime: 'Please select start time',
          mailServerJson: 'Please select server',
        }
      },
      operateserver: {
        title: 'Operate Server List',
        titleserver: 'Server List',
        addservermail: 'Add Mail',
        editservermail: 'Edit Mail',
        mailRemark: 'Mail Remark',
        mailStatus: 'Mail Status',
        mailTitle: 'Mail Title',
        mailExpire: 'Expire Time',
        mailContent: 'Mail Content',
        goodsJson: 'Goods Info',
        createDate: 'Create Time',
        mailSendDate: 'Send Time',
        updateDate: 'Update Time',
        mailId: 'Mail Template',
        mailServerJson: 'Mail Server',
        serverId: 'Server ID',
        serverName: 'Server Name',
        Sending: 'Send to Game Server',
        msg: 'Game Server Return Message',
        activeFrom: 'Start Time',
        activeTo: 'End Time',
        userRole: 'User Role',
        role: 'Role',
        goods: 'Goods',
        roleId: 'Role ID',
        enableDateRange: 'Enable Date Range',
        custom: 'Custom',
        createRoleAfter: 'Create Role After',
        createRoleBefore: 'Create Role Before',
        sendStatus: 'Send Status',
        notSend: 'Not Send',
        noData: 'No Data',
        total: 'Total',
        item: 'Item',
        success: 'Success',
        failed: 'Failed',
        timeRange: 'Time Range',
        operateUser: 'Operate User',
        roleName: 'Role Name',
        form: {
          mailRemark: 'Please enter mail remark',
          mailTitle: 'Please enter mail title',
          mailExpire: 'Please select expire time',
          mailContent: 'Please enter mail content',
          mailId: 'Please select mail template',
          mailServerJson: 'Please select mail server',
          mailSendDate: 'Please select send time',
          goodsJson: 'Please enter goods info',
          activeFrom: 'Please select start time',
          activeTo: 'Please select end time',
          userRole: 'Please select user role',
          createRoleAfter: 'Please select create role after',
          createRoleBefore: 'Please select create role before',
          operateUser: 'Please enter operate user',
          mailStatus: 'Please select mail status',
          startTime: 'Start Time',
          endTime: 'End Time',
          separator: '~',
        }
      },
      template: {
        title: 'Template List',
        id: 'ID',
        templateName: 'Template Name',
        createTime: 'Create Time',
        addtemplate: 'Add Template',
        edittemplate: 'Edit Template',
        templateType: 'Template Type',
        form: {
          templateName: 'Please enter template name',
          templateType: 'Please select template type',
          templateContent: 'Please enter template content',
        }
      },
      activity: {
        title: 'Activity List',
        ID: 'ID',
        activityName: 'Activity Name',
        templateId: 'Template Name',
        servers: 'Effective Server',
        startTime: 'Start Time',
        endTime: 'End Time',
        status: 'Status',
        addActivity: 'Add Activity',
        editActivity: 'Edit Activity',
        imageUrl: 'Activity Effective Page',
        preview: 'Image Preview',
        audit: 'Audit',
        auditPass: 'Audit Pass',
        auditReject: 'Audit Reject',
        enable: 'Enabled',
        disable: 'Disabled',
        expired: 'Expired',
        statusClose: 'End',
        statusEnable: 'Enable',
        auditModal: 'Activity Audit Details',
        templateInfo: 'Template Info',
        templateName: 'Template Name',
        gmParam: 'GM Param',
        activityInfo: 'Activity Info',
        flag: 'Flag',
        createTime: 'Create Time',
        updateTime: 'Update Time',
        form: {
          activityName: 'Please enter activity name',
          templateId: 'Please select template name',
          servers: 'Please select server',
          startTime: 'Please select start time',
          endTime: 'Please select end time',
          imageUrl: 'Please enter image URL address',
        }
      },
      serveractivity: {
        title: 'Server Activity',
        activityConfigId: 'Config ID',
        activityId: 'Platform ID',
        activityGuid: 'Server GID',
        activityName: 'Activity Name',
        activityType: 'Activity Type',
        createTime: 'Create Time',
        beginShowTime: 'Begin Show Time',
        openTime: 'Open Time',
        closeTime: 'Close Time',
        removeTime: 'Remove Time',
        state: 'State',
        isActive: 'Is Active',
        activityStateGreaterThan5: 'Activity State Greater Than 5',
        activityOpen: 'Activity Open',
        activityClose: 'Activity Close',
        serverState: {
          null: 'null',
          preshow: 'pre_show',
          showing: 'showing',
          endshow: 'end_show',
          preopen: 'pre_open',
          openning: 'openning',
          endopen: 'end_open',
          closed: 'closed',
          remove: 'remove',
        },
        form: {
          activityGuid: 'Please enter activity ID',
          state: 'Please select activity state',
        },
        activitytype: {
          bigtype: {
            null: 'null',
            system: 'system',
            rank: 'rank',
            task: 'task',
            map: 'map',
            shop: 'shop',
            income: 'income',
          },
          smalltype_rank: {
            null: 'null',
            zhanli: 'zhanli',
          },
          smalltype_task: {
            null: 'null',
            xinshouqiri: 'xinshouqiri',
            dengjijiangli: 'dengjijiangli',
            renwudacheng: 'renwudacheng',
            shouchonghuodong: 'shouchonghuodong',
            leichonghuodong: 'leichonghuodong',
            tongxinzhen: 'tongxinzhen',
          },
          smalltype_map: {
            null: 'null',
            flush_monster: 'flush_monster',
            flush_npc: 'flush_npc',
          },
          smalltype_shop: {
            null: 'null',
            monster: 'monster',
            npc: 'npc',
          },
          smalltype_income: {
            null: 'null',
            shouyizengjia: 'shouyizengjia',
          },
          smalltype_system: {
            null: 'null',
            shangcheng: 'shangcheng',
            meirixiangou: 'meirixiangou',
          },
          unknown: 'unknown',
        }
      },
      overviewrole: {
        title: "Role Overview",
        targetDay: 'Date Time',
        serverID: "Server",
        channelID: "Channel Name",
        roleAdd: "First Login Role",
        addPayedRole: "New Payed Role",
        addTotal: "New Payed Income",
        NewPayingRate: "New Payed Rate(%)",
        NewARPU: "New ARPU",
        LoginRoles: "Login Role",
        LoginPayingRoles: "Login Payed Role",
        TotalPayingIncome: "Total Payed Income",
        LoginPayingRate: "Login Payed Rate(%)",
        LoginARPU: "Login ARPU",
        AverageOnlineTime: "Average Online Time(min)",
        AverageGameSessions: "Average Game Sessions",
        AverageOnlineUsers: "Average Online Users",
        tooltips: {
          targetDay: "The statistical date or time range corresponding to this data",
          NewUsers: "Number of users who logged into the game for the first time within the statistical period",
          roleAdd: "Number of roles that logged in for the first time within the statistical period",
          addPayedRole: "Number of roles that made their first payment within the statistical period",
          addTotal: "Total payment amount from all first-time paying roles within the statistical period",
          NewPayingRate: "New Payed Role ÷ First Login Role",
          NewARPU: "New Payed Income ÷ First Login Role",
          LoginRoles: "Number of roles that logged in within the statistical period",
          LoginPayingRoles: "Number of roles that made their first payment within the statistical period",
          TotalPayingIncome: "Total payment amount from all roles within the statistical period",
          LoginPayingRate: "Login Payed Role ÷ Login Role",
          LoginARPU: "Total Payed Income ÷ Login Role",
          AverageGameSessions: "Total Login Times ÷ Login Role",
        }
      },
      overviewuser: {
        title: "User Overview",
        targetDay: "Date Time",
        channelID: "Channel Name",
        ActivatedDevices: "Activated Devices",
        NewDevices: "New Devices",
        NewUsers: "New Users",
        NewPayingUsers: "New Payed Users",
        NewPayingIncome: "New Payed Income",
        NewARPU: "New ARPU",
        NewPayingRate: "New Payed Rate(%)",
        NewPayingARPU: "New Payed ARPU",
        BootedDevices: "Booted Devices",
        LoggedInDevices: "Logged In Devices",
        LoggedInUsers: "Logged In Users",
        LoggedInPayingUsers: "Logged In Payed Users",
        TotalPayingIncome: "Total Payed Income",
        LoggedInPayingARPU: "Logged In Payed ARPU",
        LoggedInPayingRate: "Logged In Payed Rate(%)",
        LoggedInARPU: "Logged In ARPU",
        PayingSuccessRate: "Paying Success Rate(%)",
        AverageLaunchTimes: "Average Launch Times",
        // Tooltip descriptions
        tooltips: {
          NewUsers: "Number of users who logged into the game for the first time within the statistical period",
          NewPayingUsers: "Number of users who made their first payment within the statistical period",
          NewPayingIncome: "Total payment amount from all first-time paying users within the statistical period",
          NewARPU: "New Paying Income ÷ New Users",
          NewPayingRate: "New Paying Users ÷ New Users",
          NewPayingARPU: "New Paying Income ÷ New Paying Users",
          LoggedInDevices: "Number of devices that logged in within the statistical period (currently no PC)",
          LoggedInUsers: "Number of users who logged in within the statistical period",
          LoggedInPayingUsers: "Number of users who both logged in and made payments within the statistical period",
          TotalPayingIncome: "Total payment amount from all users within the statistical period",
          LoggedInPayingARPU: "Total Paying Income ÷ Logged In Paying Users",
          LoggedInPayingRate: "Logged In Paying Users ÷ Logged In Users",
          LoggedInARPU: "Total Paying Income ÷ Logged In Users",
          PayingSuccessRate: "Number of successfully paid orders ÷ Total number of created orders"
        }
      },
      retention: {
        title: "Data List",
        targetDay: "Date Time",
        serverID: "Server ID",
        channelID: "Channel ID",
        selectchannel: "Select Channel",
        selectserver: "Select Server",
        retentionGroupType: "Data Group",
        sum: "Data Sum",
        channel: "Channel Group",
        server: "Server Group",
        combo: "Combo Group",
        date: "Date Group",
        retentionType: "Data Display",
        percentage: "Display Percentage",
        value: "Display Value",
        selectTime: "Select Time",
        dateRange: "Date Range",
        today: "Today",
        yesterday: "Yesterday",
        last7days: "Last 7 Days",
        last14days: "Last 14 Days",
        last30days: "Last 30 Days",
        thisMonth: "This Month",
        lastMonth: "Last Month",
        thisYear: "This Year",
        lastYear: "Last Year",
        New: "New",
        RoleAdd: "First Login",
        Retention1: "Retention1",
        Retention3: "Retention3",
        Retention4: "Retention4",
        Retention5: "Retention5",
        Retention6: "Retention6",
        Retention7: "Retention7",
        Retention8: "Retention8",
        Retention9: "Retention9",
        Retention10: "Retention10",
        Retention11: "Retention11",
        Retention12: "Retention12",
        Retention13: "Retention13",
        Retention14: "Retention14",
        Retention15: "Retention15",
        Retention16: "Retention16",
        Retention17: "Retention17",
        Retention18: "Retention18",
        Retention19: "Retention19",
        Retention20: "Retention20",
        Retention21: "Retention21",
        Retention22: "Retention22",
        Retention23: "Retention23",
        Retention24: "Retention24",
        Retention25: "Retention25",
        Retention26: "Retention26",
        Retention27: "Retention27",
        Retention28: "Retention28",
        Retention29: "Retention29",
        Retention30: "Retention30",
        Retention45: "Retention45",
        Retention60: "Retention60",
        Retention90: "Retention90",
        form: {
          selectchannel: "Select Channel",
          selectserver: "Select Server",
          selectIgnoreTypes: "Select Ignore Types",
          retentionGroupType: "Select Data Group",
          retentionType: "Select Data Display",
          dateRange: "Select Date Range",
          datePreset: "Select Date Preset",
        }
      },
      ltvuser: {
        title: "User LTV Data",
        selectchannel: "Select Channel",
        DateTime: "Date Time",
        New: "New",
        LTV1: "LTV1",
        LTV2: "LTV2",
        LTV3: "LTV3",
        LTV4: "LTV4",
        LTV5: "LTV5",
        LTV6: "LTV6",
        LTV7: "LTV7",
        LTV8: "LTV8",
        LTV9: "LTV9",
        LTV10: "LTV10",
        LTV11: "LTV11",
        LTV12: "LTV12",
        LTV13: "LTV13",
        LTV14: "LTV14",
        LTV15: "LTV15",
        LTV16: "LTV16",
        LTV17: "LTV17",
        LTV18: "LTV18",
        LTV19: "LTV19",
        LTV20: "LTV20",
        LTV21: "LTV21",
        LTV22: "LTV22",
        LTV23: "LTV23",
        LTV24: "LTV24",
        LTV25: "LTV25",
        LTV26: "LTV26",
        LTV27: "LTV27",
        LTV28: "LTV28",
        LTV29: "LTV29",
        LTV30: "LTV30",
        LTV31: "LTV31",
        LTV32: "LTV32",
        LTV33: "LTV33",
        LTV34: "LTV34",
        LTV35: "LTV35",
        LTV36: "LTV36",
        LTV37: "LTV37",
        LTV38: "LTV38",
        LTV39: "LTV39",
        LTV40: "LTV40",
        LTV41: "LTV41",
        LTV42: "LTV42",
        LTV43: "LTV43",
        LTV44: "LTV44",
        LTV45: "LTV45",
        LTV46: "LTV46",
        LTV47: "LTV47",
        LTV48: "LTV48",
        LTV49: "LTV49",
        LTV50: "LTV50",
        LTV51: "LTV51",
        LTV52: "LTV52",
        LTV53: "LTV53",
        LTV54: "LTV54",
        LTV55: "LTV55",
        LTV56: "LTV56",
        LTV57: "LTV57",
        LTV58: "LTV58",
        LTV59: "LTV59",
        LTV60: "LTV60",
        LTV61: "LTV61",
        LTV62: "LTV62",
        LTV63: "LTV63",
        LTV64: "LTV64",
        LTV65: "LTV65",
        LTV66: "LTV66",
        LTV67: "LTV67",
        LTV68: "LTV68",
        LTV69: "LTV69",
        LTV70: "LTV70",
        LTV71: "LTV71",
        LTV72: "LTV72",
        LTV73: "LTV73",
        LTV74: "LTV74",
        LTV75: "LTV75",
        LTV76: "LTV76",
        LTV77: "LTV77",
        LTV78: "LTV78",
        LTV79: "LTV79",
        LTV80: "LTV80",
        LTV81: "LTV81",
        LTV82: "LTV82",
        LTV83: "LTV83",
        LTV84: "LTV84",
        LTV85: "LTV85",
        LTV86: "LTV86",
        LTV87: "LTV87",
        LTV88: "LTV88",
        LTV89: "LTV89",
        LTV90: "LTV90",
        LTV91: "LTV91",
        LTV92: "LTV92",
        LTV93: "LTV93",
        LTV94: "LTV94",
        LTV95: "LTV95",
        LTV96: "LTV96",
        LTV97: "LTV97",
        LTV98: "LTV98",
        LTV99: "LTV99",
        LTV100: "LTV100",
        LTV101: "LTV101",
        LTV102: "LTV102",
        LTV103: "LTV103",
        LTV104: "LTV104",
        LTV105: "LTV105",
        LTV106: "LTV106",
        LTV107: "LTV107",
        LTV108: "LTV108",
        LTV109: "LTV109",
        LTV110: "LTV110",
        LTV111: "LTV111",
        LTV112: "LTV112",
        LTV113: "LTV113",
        LTV114: "LTV114",
        LTV115: "LTV115",
        LTV116: "LTV116",
        LTV117: "LTV117",
        LTV118: "LTV118",
        LTV119: "LTV119",
        LTV120: "LTV120",
        form: {
          selectchannel: "Please select channel"
        }
      },
      activitylog: {
        title: 'Activity Log',
        ID: 'ID',
        activityId: 'Activity ID',
        activityName: 'Activity Name',
        applyIp: 'Apply IP',
        applyUser: 'Apply User',
        auditIp: 'Audit IP',
        auditUser: 'Audit User',
        auditTime: 'Audit Time',
        endTime: 'End Time',
        operate: 'Operate'
      },
      activitygm: {
        title: 'Template List',
        addActivity: 'Add Template',
        editActivity: 'Edit Template',
        ID: 'ID',
        name: 'Template Name',
        description: 'Template Description',
        createTime: 'Create Time',
        updateTime: 'Update Time',
        status: 'Status',
        form: {
          name: 'Please enter template name',
          description: 'Please enter template description',
        }
      },
      gmTemplateParams: {
        title: 'Parameter Configuration List',
        addActivity: 'Add Parameter',
        editActivity: 'Edit Parameter',
        ID: 'ID',
        activeGmId: 'Template ID',
        gmName: 'Template Name',
        paramIndex: 'Sort',
        paramName: 'Parameter Name',
        templateName: 'Template Name',
        status: 'Status',
        selectTemplate: 'Please select template',
        form: {
          activeGmId: 'Please select template',
          templateName: 'Please enter template name',
          paramIndex: 'Please enter sort',
          paramName: 'Please enter parameter name',
          selectTemplate: 'Please enter template name',
        }
      },
      activityimages: {
        title: 'Activity Image',
        addActivityimages: 'Add Activity Image',
        editActivityimages: 'Edit Activity Image',
        ID: 'ID',
        name: 'Image Description',
        url: 'Image URL',
        serverNames: 'Server',
        endTime: 'End Time',
        startTime: 'Start Time',
        form: {
          name: 'Please enter image description',
          url: 'Please enter image URL',
        }
      },
      guildslist: {
        title: 'Guild List',
        guildId: 'Guild ID',
        guildName: 'Guild Name',
        leadercuid: 'Guild Leader ID',
        leaderName: 'Guild Leader Name',
        memberCount: 'Member Count',
        guildLevel: 'Guild Level',
      },
      mailGuildController: {
        title: 'Guild Mail',
        titleserver: 'View Send Details',
        addservermail: 'Add Guild Mail',
        editservermail: 'Edit Guild Mail',
        mailRemark: 'Mail Remark',
        mailStatus: 'Mail Status',
        mailTitle: 'Mail Title',
        mailExpire: 'Expire Time',
        mailContent: 'Mail Content',
        goodsJson: 'Goods Info',
        createDate: 'Create Time',
        mailSendDate: 'Send Time',
        updateDate: 'Update Time',
        mailId: 'Select Template',
        mailServerJson: 'Server',
        serverId: 'Server ID',
        serverName: 'Server Name',
        Sending: 'Send Status',
        activeFrom: 'Start Time',
        activeTo: 'End Time',
        custom: 'Custom',
        goods: 'Goods',
        mailGuildJson: 'Search Guild',
        mailGuildJsonTitle: 'Selected Guild',
        guildId: 'Guild ID',
        guildName: 'Guild Name',
        form: {
          mailRemark: 'Please enter mail remark',
          mailTitle: 'Please enter mail title',
          mailContent: 'Please enter mail content',
          mailId: 'Please select mail template',
          mailSendDate: 'Please select send time',
          mailExpire: 'Please select expire time',
          goodsJson: 'Please select goods',
          mailServerJson: 'Please select server',
          mailGuildJson: 'Please select server, then search guild',
        }
      },
      products: {
        title: 'Product List',
        pleaseSelectChannel: 'Please select channel',
        addProduct: 'Add Product',
        editProduct: 'Edit Product',
        productId: 'ID',
        productIndex: 'Sort',
        channelName: 'Channel Name',
        channelProductId: 'Channel Product ID',
        gameProductId: 'Game Product ID',
        productName: 'Product Name',
        productPrice: 'Product Price',
        nativePrice: 'Native Price',
        dollarPrice: 'Dollar Price',
        productNumber: 'Product Number',
        productDescribe: 'Product Description',
        productType: 'Product Type',
        enable: 'Status',
        createDate: 'Create Time',
        updateDate: 'Update Time',
        producttype: {
          sdk: 'SDK',
          web: 'Web'
        },
        productstatus: {
          enable: 'Enable',
          disable: 'Disable'
        },
        importModal: {
          title: 'Import Product List Data',
          fileFormatTip: 'File Format Restrictions: Only "xls" or "xlsx" files are allowed',
          selectFile: 'Select File',
          downloadTemplate: 'Download Template',
          selectedFile: 'Selected File:',
          updateExistingData: 'Update Existing Data',
          importing: 'Importing...',
          downloadingTemplate: 'Downloading Template File...',
          templateDownloadFailed: 'Template Download Failed',
          templateDownloadSuccess: 'Template Download Success',
          pleaseSelectFile: 'Please select the file to import',
          channelIdRequired: 'Channel ID cannot be empty',
          fileImportSuccess: 'File import successful',
          fileImportFailed: 'File import failed',
          invalidFileFormat: 'Only "xls" or "xlsx" files are allowed',
          fileSizeExceeded: 'File size cannot exceed 10MB',
          errorFileDownloadSuccess: 'Error file has been downloaded, please check the specific error information'
        },
        form: {
          channelProductId: 'Please enter channel product ID',
          gameProductId: 'Please enter game product ID',
          productName: 'Please enter product name',
          dollarPrice: 'Please enter dollar price',
          productNumber: 'Please enter product number',
          productDescribe: 'Please enter product description',
          productType: 'Please select product type',
          enable: 'Please select status',
        }
      },
      Gems: {
        title: 'Gems Shop',
        addGems: 'Add Gems Shop',
        editGems: 'Edit Gems Shop',
        serverId: 'Server ID',
        serverName: 'Server Name',
        id: 'Product ID',
        nameId: 'Product Name ID',
        price: 'Product Price',
        discountRate: 'Product Discount',
        discountPrice: 'Sale Price',
        limitCount: 'Purchase Limit',
        requireLevel: 'Level Requirement',
        limitType: 'Purchase Limit Type',
        saleType: 'Purchase Condition',
        sellCategoryOrder: 'Category Order',
        hideinclient: 'Product Status',
        saleStartData: 'Sale Start Date',
        saleCloseData: 'Sale End Date',
        saleWeekType: 'Sale Week Type',
        pleaseSelectServer: 'Please select server',
        operator: 'Operator',
        searchTime: 'Sale Start Date',
        selectServer: 'Select Server to Sync',
        selectServerTips: 'Please select server to sync',
        selectServerDesc: 'Support multiple selection, the synchronization operation will update the configuration of the selected server',
        selectServerTipsSearch: 'Please select server to sync(support search)',
        weekdays: {
          yes: 'Yes',
          no: 'No',
          monday: 'Monday',
          tuesday: 'Tuesday',
          wednesday: 'Wednesday',
          thursday: 'Thursday',
          friday: 'Friday',
          saturday: 'Saturday',
          sunday: 'Sunday',
          allWeek: 'All Week',
          notSet: 'Not Set',
        },
        form: {
          id: 'Please enter product ID',
          nameId: 'Please enter product name ID',
          saleType: 'Please select purchase condition',
          discountPrice: 'Please enter product sale price',
          limitType: 'Please select purchase limit type',
          limitCount: 'Please enter purchase limit count',
          sellCategoryOrder: 'Please enter category order',
          hideinclient: 'Please select whether to hide the product in the client',
          saleStartData: 'Please select sale start date',
          saleCloseData: 'Please select sale end date',
          saleWeekType: 'Please select whether to use week display',
          operator: 'Please enter operator',
          searchTime: 'Please select sale start date',

        },
        saletype: {
          none: 'NONE',
          serveropen: 'SERVER_OPEN',
          characterLevel: 'CHARACTER_LEVEL',
          achievement: 'ACHIEVEMENT',
          characterClass: 'CHARACTER_CLASS',
          quest: 'QUEST',
          returnDayCount: 'RETURN_DAY_COUNT',
          uniquePetGain: 'UNIQUE_PET_GAIN',
          epicPetGain: 'EPIC_PET_GAIN',
          legendPetGain: 'LEGEND_PET_GAIN ',
          uniqueReflectionGain: 'UNIQUE_REFLECTION_GAIN',
          epicReflectionGain: 'EPIC_REFLECTION_GAIN',
          legendReflectionGain: 'LEGEND_REFLECTION_GAIN',
          heroReflectionGain: 'HERO_REFLECTION_GAIN',
          endEnum: 'END_ENUM',
        },
        limittype: {
          none: 'NONE',
          dailyLimit: 'DAILY_LIMIT',
          weeklyLimit: 'WEEKLY_LIMIT',
          monthlyLimit: 'MONTHLY_LIMIT',
          account: 'ACCOUNT',
          server: 'SERVER',
          character: 'CHARACTER',
          accountLimit: 'ACCOUNT_LIMIT',
          accountDailyLimit: 'ACCOUNT_DAILY_LIMIT',
          accountWeeklyLimit: 'ACCOUNT_WEEKLY_LIMIT',
          accountMonthlyLimit: 'ACCOUNT_MONTHLY_LIMIT',
          serverLimit: 'SERVER_LIMIT',
          serverDailyLimit: 'SERVER_DAILY_LIMIT',
          serverWeeklyLimit: 'SERVER_WEEKLY_LIMIT',
          serverMonthlyLimit: 'SERVER_MONTHLY_LIMIT',
          characterLimit: 'CHARACTER_LIMIT',
          characterDailyLimit: 'CHARACTER_DAILY_LIMIT',
          characterWeeklyLimit: 'CHARACTER_WEEKLY_LIMIT',
          characterMonthlyLimit: 'CHARACTER_MONTHLY_LIMIT',
          exchange1CharacterLimit: 'CASHSHOP_EXCHANGE1_CHARACTER_LIMIT',
          exchange2ServerLimit: 'CASHSHOP_EXCHANGE2_SERVER_LIMIT',
          exchange2ServerDailyLimit: 'CASHSHOP_EXCHANGE2_SERVER_DAILY_LIMIT',
          exchange2CharacterLimit: 'CASHSHOP_EXCHANGE2_CHARACTER_LIMIT',
          exchange2CharacterDailyLimit: 'CASHSHOP_EXCHANGE2_CHARACTER_DAILY_LIMIT',
          scheduleLimit: 'SCHEDULE_LIMIT',
          endEnum: 'END_ENUM',
        },
        productstatus: {
          "Visible": "Visible",
          "Hidden": "Hidden"
        }
      },
      orders: {
        title: 'Order List',
        gameId: 'Game ID',
        channelID: 'Channel ID',
        serverId: 'Server ID',
        serverName: 'Server Name',
        roleId: 'Role ID',
        openId: 'Platform User ID',
        loginName: 'Login Name',
        itemId: 'Product ID',
        itemName: 'Product Name',
        amount: 'Payment Amount',
        price: 'Payment Unit Price',
        orderNo: 'SDK Order No',
        outOrderNo: 'Platform Order No',
        count: 'Purchase Quantity',
        payTime: 'Payment Time',
        remark: 'Remark Information',
        serverOrderNo: 'Game Order No',
        callbackCount: 'Callback Retry Count',
        uid: 'SDK User UID',
        createIp: 'Client IP',
        callbackIp: 'SDK Callback Source IP',
        status: 'Status',
        callbackStatus: 'Callback Status',
        createTime: 'Create Time',
        updateTime: 'Update Time',
        extrasParams: 'Pass-through Parameters (Original XML)',
        searchType: 'Search Type',
        selectOrder: 'Please select the order to be replenished first',
        noOrder: 'No valid order data found',
        noOrderReplenish: '{count} orders do not support replenishment operations',
        reason: 'Please fill in the reason for replenishing the order',
        operator: 'Please fill in the operator',
        batchRechargeSuccess: 'Successfully initiated batch replenishment, a total of {count} orders',
        batchRechargeFailed: 'Batch replenishment failed, please try again later',
        batchRechargeSelected: 'Selected {count} orders for batch replenishment',
        batchRechargeConfirm: 'Confirm Batch Replenishment?',
        batchRechargeValidOrders: 'Note: Only {count} orders meet the replenishment conditions',
        Status: {
          success: "Success",
          pending: "Pending",
          failed: "Failed",
          processing: "Processing",
          shipped: "Shipped",
          cancelled: "Cancelled",
          pendingReplenish: "Pending Replenish",
        },
        CallbackStatus: {
          success: "Success",
          failed: "Failed",
          processing: "Processing",
        },
        form: {
          searchValue: 'Please enter search content',
          status: 'Please select order status',
          callbackStatus: 'Please select callback status',
        }
      },
      questionnaire: {
        titles: 'Questionnaire Management',
        addQuestionnaire: 'Add Questionnaire',
        editQuestionnaire: 'Edit Questionnaire',
        id: 'ID',
        title: 'Title',
        richContentMd: 'Questionnaire Content',
        unlockType: 'Unlock Type',
        unlockLevel: 'Unlock Type',
        goodsJson: 'Reward Item',
        wjxUrl: 'Questionnaire Link',
        status: 'Status',
        mailTemplate: 'Mail Template',
        mailTitle: 'Mail Title',
        mailContent: 'Mail Content',
        createdBy: 'Created By',
        createdAt: 'Created At',
        updatedAt: 'Updated At',
        unlocktype: {
          level: 'Level',
        },
        questionnaireStatus: {
          open: 'Open',
          close: 'Close',
        },
        form: {
          title: 'Please enter questionnaire title',
          richContentMd: 'Please enter questionnaire content',
          unlockType: 'Please select unlock type',
          unlockLevel: 'Please enter unlock level',
          wjxUrl: 'Please enter questionnaire link',
          goodsJson: 'Please select reward item',
          status: 'Please select status',
          mailTemplate: 'Please select mail template',
          mailTitle: 'Please enter mail title',
          mailContent: 'Please enter mail content',
          count: 'Count',
          pleaseSelectGoods: 'Please select reward item',
        }
      },
      surveyrecord: {
        title: 'Questionnaire Record List',
        surveyId: 'Questionnaire ID',
        openId: 'Platform User ID',
        roleId: 'Role ID',
        serverId: 'Server ID',
        finishedAt: 'Finished Time',
        wjxRespId: 'Questionnaire Star Submission ID',
        extPayload: 'Answer Content',
        createdAt: 'Created Time',
        updatedAt: 'Updated Time',
      },
      giftactivity: {
        title: 'Activity List',
        addGiftActivity: 'Add Gift Code Activity',
        editGiftActivity: 'Edit Gift Code Activity',
        ID: 'ID',
        name: 'Activity Name',
        campaignCode: 'Campaign Code',
        scopeChannel: 'Channel Scope',
        scopeServer: 'Server Scope',
        perUserLimit: 'Limit per User',
        totalLimit: 'Total Limit',
        rewardJson: 'Reward Content',
        remark: 'Remarks',
        startTime: 'Start Time',
        endTime: 'End Time',
        status: 'Status',
        creator: 'Creator',
        batch: 'Batch',
        allocation: 'Allocation',
        mailTitle: 'Mail Title',
        mailContent: 'Mail Content',
        form: {
          name: 'Please enter activity name',
          mailTitle: 'Please enter mail title',
          mailContent: 'Please enter mail content',
        },
        batchlist: {
          title: 'Batch List',
          addBatch: 'Add Batch',
          editBatch: 'Edit Batch',
          ID: 'ID',
          codeType: 'Batch Type',
          codePrefix: 'Gift Code',
          codeLen: 'Gift Code Length',
          randomCodeLength: 'Random Code Length',
          amount: 'Generate Quantity',
          generatedCount: 'Actual Generated Quantity',
          exportedCountL: 'Exported Quantity',
          status: 'Status',
          total: 'Total',
          used: 'Used',
          remain: 'Remain',
          giftCodeBatch: 'Generate',
          generateSuccess: 'Gift code generated successfully',
          view: 'View',
          void: 'Void',
          confirmVoid: 'Are you sure you want to void this batch?',
          voidSuccess: 'Void Success',
          batchVoidSuccess: 'Batch Void Success',
          batchVoidFailed: 'Batch Void Failed',
          maxRedeemCount: 'Redemption Limit',
          addBatchSuccess: 'Gift code batch added successfully',
          updateBatchSuccess: 'Gift code batch updated successfully',
          form: {
            activityName: 'Activity Name',
            codeType: 'Please select batch type',
            randomCodeLength: 'Please enter random code length',
            amount: 'Please enter generate quantity',
            codePrefix: 'Please enter custom universal code',
            codePrefixPlaceholder: 'Please enter gift code prefix',
            maxRedeemCount: 'Please enter redemption limit',
            randomCodeLengthPlaceholder: 'Please enter random code length',
          },
          example: {
            title: "Gift Code Generation Example:",
            inputPrefix: "Enter prefix \"{prefix}\" and random code length \"{length}\"",
            result: "Final Result: {prefix} + Random {length}-digit number",
            generated: "Example Result: {code}",
            randomCodeLengthPlaceholder: "Please enter random code length",
            prefixMinLength: "Gift code prefix minimum 6 digits",
            prefixMaxLength: "Gift code prefix maximum 4 digits",
          },
        },
        allocationDrawer: {
          title: 'Activity Allocation',
          activityId: 'Activity ID',
          activityName: 'Activity Name',
          channelScope: 'Channel Allocation',
          channelScopeTips: 'The current channel scope is "All", no allocation needed',
          selectChannel: 'Select channels to allocate',
          selectedChannel: '{count} / {total} channels selected',
          serverScope: 'Server Allocation',
          serverScopeTips: 'The current server scope is "All", no allocation needed',
          selectServer: 'Select servers to allocate',
          selectedServer: '{count} / {total} servers selected',
          success: 'Allocation Successful',
          pleaseSelectChannelOrServer: 'Please select at least one channel or server',
          allocationFailed: 'Allocation failed, please try again later',
        },
        herder: {
          title: 'Gift Code Activity Configuration',
          description: 'Create and manage gift code activities, supporting multiple types of gift codes',
          totalActivity: 'Total Activities',
          generateCode: 'Generate Gift Code',
          exchangedCount: 'Redeemed Count',
        },
        giftType: {
          common: 'Universal Code',
          special: 'Unique Code',
        },
        scopeType: {
          all: 'All',
          list: 'List',
        },
        giftActivityStatus: {
          enable: 'Enabled',
          disable: 'Disabled',
          archive: 'Archived',
        },
      },
      gitcodeBachController: {
        giftBatchStatus: {
          initial: 'Initialized',
          generating: 'Generating',
          completed: 'Completed',
          cancelled: 'Cancelled',
        },
      },
      redeemrecord: {
        title: 'Redeem Record List',
        campaignId: 'Campaign ID',
        codeId: 'Redeem ID',
        codeType: 'Type',
        openId: 'Platform User ID',
        roleId: 'Role ID',
        serverId: 'Server ID',
        channelId: 'Channel ID',
        ip: 'IP',
        deviceId: 'Device ID',
        traceId: 'Trace ID',
        status: 'Status',
        failReason: 'Fail Reason',
        rewardSnapshot: 'Reward Snapshot',
        createdAt: 'Created Time',
        rewardDetail: 'Mail Information',
        rewardItems: 'Reward Items'
      },
      giftCode: {
        title: 'Gift Code List',
        pleaseSelectBatch: 'Please select a batch first',
        ID: 'ID',
        codePlain: 'Gift Code',
        codeType: 'Type',
        status: 'Status',
        maxRedeemCount: 'Max Redemption Count',
        redeemedCount: 'Redeemed Count',
        usedByOpenId: 'User',
        createdAt: 'Created At',
        usedTime: 'Used Time',
        copyCodeSuccess: 'Gift code {code} has been copied to clipboard',
        batchId: 'Gift codes for batch {batchId}',
        backToGiftActivity: 'Back to Gift Code Activity Page',
        codePlainPlaceholder: 'Please enter gift code',
        clickCodeToCopy: 'Click the gift code to copy to clipboard',
        statusPlaceholder: 'Please select status',
        usedByOpenIdPlaceholder: 'Please enter user ID',
      },
      serverFile: {
        title: 'Server File',
        Contents: 'Contents',
        name: 'Name',
        size: 'Size',
        lastModified: 'Last Modified',
        rootDirectory: {
          table: 'Table',
          script: 'Script',
          script_cabin: 'Cabin',
          script_common: 'Common',
          script_config_tables: 'Config Tables',
          script_framework: 'Framework',
          script_header: 'Header',
          script_hotfix: 'Hotfix',
          script_proto: 'Proto',
          script_rebot: 'Rebot',
          script_scheduler: 'Scheduler',
          script_test_client: 'Test Client',
          script_test_server: 'Test Server',
          script_world: 'World',
        },
        form: {
          selectserver: 'Please select server',
          Contents: 'Please select directory',
        }
      }
    },
    userCenter: {
      title: 'Personal Center',
      editProfile: 'Edit Profile',
      changePassword: 'Change Password',
      avatarUploadSuccess: 'Avatar upload successful!',
      avatarUploadFailed: 'Avatar upload failed',
      profileUpdateSuccess: 'Profile update successful!',
      profileUpdateFailed: 'Update failed, please try again',
      passwordChangeSuccess: 'Password change successful!',
      passwordChangeFailed: 'Password change failed, please try again',
      passwordCheckFailed: 'Password change failed, please check if the current password is correct',
      passwordNotMatch: 'The two passwords do not match',
      avatarPreview: 'Avatar Preview',
      userInfo: {
        username: 'Username',
        nickname: 'Nickname',
        email: 'Email',
        phone: 'Phone',
        department: 'Department',
        lastLogin: 'Last Login',
        loginIp: 'Login IP',
        createTime: 'Create Time',
        notSet: 'Not Set',
        unassigned: 'Unassigned',
        unknown: 'Unknown'
      },
      statistics: {
        loginCount: 'Login Count',
        onlineTime: 'Online Time',
        rolePermissions: 'Role Permissions',
        department: 'Department',
        onlineTimeUnit: 'Hours'
      },
      gender: {
        male: 'Male',
        female: 'Female',
        unknown: 'Unknown'
      },
      rolePermissions: {
        title: 'Role Permissions',
        noRoles: 'No Role Permissions'
      },
      editModal: {
        title: 'Edit Personal Information',
        nickname: 'Nickname',
        email: 'Email',
        phone: 'Phone',
        gender: 'Gender',
        remark: 'Remark',
        form: {
          nicknamePlaceholder: 'Please enter nickname',
          emailPlaceholder: 'Please enter email',
          phonePlaceholder: 'Please enter phone number',
          genderPlaceholder: 'Please select gender',
          remarkPlaceholder: 'Please enter remark information'
        }
      },
      passwordModal: {
        title: 'Change Password',
        currentPassword: 'Current Password',
        newPassword: 'New Password',
        confirmPassword: 'Confirm Password',
        confirmChange: 'Confirm Change',
        form: {
          currentPasswordPlaceholder: 'Please enter current password',
          newPasswordPlaceholder: 'Please enter new password (6-20 characters)',
          confirmPasswordPlaceholder: 'Please enter new password again',
          currentPasswordRequired: 'Please enter current password',
          newPasswordRequired: 'Please enter new password',
          newPasswordLength: 'Password length should be 6-20 characters',
          confirmPasswordRequired: 'Please confirm new password',
          passwordMismatch: 'The two passwords entered are inconsistent'
        }
      }
    },

  },
  form: {
    required: 'Cannot be empty',
    itemValueInvalid: 'Please enter the correct value',
    userName: {
      required: 'Please enter user name',
      invalid: 'User name format is incorrect'
    },
    phone: {
      required: 'Please enter phone number',
      invalid: 'Phone number format is incorrect'
    },
    pwd: {
      required: 'Please enter password',
      invalid: '6-18 characters, including letters, numbers, and underscores'
    },
    confirmPwd: {
      required: 'Please enter password again',
      invalid: 'The two passwords are inconsistent'
    },
    code: {
      required: 'Please enter verification code',
      invalid: 'Verification code format is incorrect'
    },
    email: {
      required: 'Please enter email',
      invalid: 'Email format is incorrect'
    }
  },
  dropdown: {
    closeCurrent: 'Close Current',
    closeOther: 'Close Other',
    closeLeft: 'Close Left',
    closeRight: 'Close Right',
    closeAll: 'Close All'
  },
  icon: {
    themeConfig: 'Theme Configuration',
    themeSchema: 'Theme Schema',
    lang: 'Switch Language',
    fullscreen: 'Fullscreen',
    fullscreenExit: 'Exit Fullscreen',
    reload: 'Reload Page',
    collapse: 'Collapse Menu',
    expand: 'Expand Menu',
    pin: 'Pin',
    unpin: 'Unpin'
  },
  datatable: {
    itemCount: 'Total {total} items'
  }
};

export default local;
